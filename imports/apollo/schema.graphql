type Link {
    _id: ID!
    title: String
    url: String
}

type Contact {
    _id: ID!
    firstName : String!
    lastName : String!
    email : String!
    phone: String!
    city : String!
    province : String!
    postalCode : String!
    country : String!
    comment : [String]
}


type ContactResult {

	success: Boolean!
    errors: [String]
    contact : Contact
}

type ContactsResult {

	success: Boolean!
    errors: [String]
    contact : [Contact]
}

input ContactInput {
    firstName : String!
    lastName : String!
    email : String!
    phone: String!
    city : String!
    province : String!
    postalCode : String!
    country : String!
    comment : [String] = []
}

type Query {
    getLink (_id: ID!): Link
    getLinks: [Link]
    getContact (_id: ID!): Contact
    getContacts (limit: Int, offset: Int): [Contact]
}

type Mutation {
    createContact( input: ContactInput ) : Contact
    updateContact(id: ID!, input: ContactInput):  Contact!
	deleteContact (_id:ID!):  String
}
